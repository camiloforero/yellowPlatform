"""
Django settings for yellowPlatform project.

Generated by 'django-admin startproject' using Django 1.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$lrsbzlhxlqe(2_s(k3hbzo=87^up99uq3tcmgn%aw8xj5v_gt'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#FOr the debug toolbar use
INTERNAL_IPS = ('201.216.19.248')

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_admin_generator',
    'djangobower',
    'webodt',
    'django_podio',
    'django_expa',
    'colorful',
    'tinymce',
    'django_wysiwyg',
    'widget_tweaks',
    'django_mailTemplates',
    'django_documents',
    'complex_hooks',
    'yellowDatabase',
    'yellowAnalytics',
    'yellowTools',
    'yellowVoting',
    'yellowCrons',
    'debug_toolbar',

]

MIDDLEWARE_CLASSES = [
    'debug_toolbar.middleware.DebugToolbarMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    #'django.middleware.clickjacking.XFrameOptionsMiddleware', #TODO: Modificar en caso que sea necesario para negar unas y aceptar a otras
]

ROOT_URLCONF = 'yellowPlatform.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'yellowPlatform.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'natcoapp',
        'HOST': 'localhost',
        'USER': 'camilo',
    }
}

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.memcached.MemcachedCache',
        'LOCATION': '127.0.0.1:11555',
    }
}
# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
#    {
#        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
#    },
#    {
#        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
#    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'es-co'

TIME_ZONE = 'America/Bogota'

USE_I18N = True

USE_L10N = True

USE_TZ = True

LOGIN_URL = '/app/login'
LOGIN_REDIRECT_URL = '/app'

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(message)s'
        }
    },
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/www/logs/debug.log',
            'formatter': 'verbose'
        },
        'usage': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/var/www/logs/usage.log',
            'formatter': 'verbose'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
        'django.yellowPlatform.libraries': {
            'handlers': ['usage'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = '/var/www/html/static/'

STATICFILES_FINDERS = (#Para django-bower
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
    'djangobower.finders.BowerFinder',
    )
BOWER_COMPONENTS_ROOT = '/var/www/yellowPlatform/components/'

BOWER_INSTALLED_APPS = (
    'gentelella',
    )

MEDIA_URL = '/app/media/'
MEDIA_ROOT = '/var/www/html/media/'

PODIO_ROOT = '/var/www/yellowPlatform/podioHooks/'

# Settings for django_mailgun
EMAIL_BACKEND = 'django_mailgun.MailgunBackend'
MAILGUN_ACCESS_KEY = 'key-b836453079daf2c10368358f26317f9e'
MAILGUN_SERVER_NAME = 'aiesecandes.org'

#Settings for webODT
WEBODT_TEMPLATE_PATH = MEDIA_ROOT + 'odtTemplates/'

#Settings for django_mailTemplates
DJANGO_WYSIWYG_FLAVOR = "tinymce_advanced"
TINYMCE_DEFAULT_CONFIG = {
    'theme':'advanced',
    }
TINYMCE_COMPRESSOR = True
